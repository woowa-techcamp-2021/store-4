name: Manual Deploy

on: workflow_dispatch

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: |
            src/**/*.+(ts|tsx)
          FILES: |
            package.json
          RELATIVE: 'server'
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/production.key
          chmod 600 ~/.ssh/production.key
          cat >>~/.ssh/config <<END
          Host production
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/production.key
            StrictHostKeyChecking no
          END
        env:
          SSH_HOST: ${{ secrets.NEW_HOSTNAME }}
          SSH_USER: ${{ secrets.NEW_USERNAME }}
          SSH_KEY: ${{ secrets.NEW_PRIVATE_KEY }}
      - name: Checkout and Pull origin
        run: ssh production 'cd ~/store-4 && git checkout main && git pull origin'

      - name: install packages
        run: ssh production 'cd ~/store-4/server && npm i'
        if: env.MATCHED_FILES

        working-directory: server
      - name: Run build script && Sync build files to server
        run: cd server && npm i && npm run build && rsync -avz ./dist/ production:~/store-4/server/dist

      - name: Reload Pm2
        run: ssh production 'cd ~/store-4/server && sudo pm2 reload store-4'
  frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: |
            client/src/**/*.+(ts|tsx)
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/production.key
          chmod 600 ~/.ssh/production.key
          cat >>~/.ssh/config <<END
          Host production
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/production.key
            StrictHostKeyChecking no
          END
        env:
          SSH_HOST: ${{ secrets.NEW_HOSTNAME }}
          SSH_USER: ${{ secrets.NEW_USERNAME }}
          SSH_KEY: ${{ secrets.NEW_PRIVATE_KEY }}
      - name: Touch .env file
        run: |
          cat >>./.env <<END
          SERVER_URL=${{ secrets.NEW_SERVER_URL }}
          END
        working-directory: client
      - name: Run build script && Sync build files to server
        run: cd client && npm i && npm run build && rsync -avz ./dist/ production:~/store-4/client/dist
